Хочу предложить примерно такое описание:
---
1) Веб-сервер раздает запросы живым обработчикам. Любой обработчик может получить любой запрос.
2) Получив запрос на запись, обработчик пытается записать этот объект в несколько баз данных (в W баз), обязательно включая локальную. Как минимум до локальной он сможет всегда достучаться. Поэтому обеспечивается Availability для запросов на запись - они будут удовлетворены. Если система находится в нормальном состоянии, результат будет записан в W баз, если в разделенном, то минимум одной.
3) Получив запрос на чтение, обработчик смотрит на всех доступных базах данных, есть ли там соответствующие объекты. Если есть - он возвращает, если нет, то говорит, что не нашел. В любом случае ответ будет дан, однако он может быть неправильным. Если запрос на чтение аггрегирующий, то обработчик локально собирает ответ из нескольких.
Так как любой запрос на запись в итоге обернется записанным на диск объектом (как минимум на локальной базе), а каждый запрос на чтение будет проверен как минимум в локальной базе, то Availability будет обеспечено. Иногда, если невозможно достучаться до нужных баз, ответ будет неполный, но в этос сервисе это не так важно.
4) Этим же обеспечивается и partition tolerance. В том случае, если какая-то машина, или несколько машин, отделяется от остальных баз (но продолжает работать как обработчик запросов), она будет продолжать записывать как минимум в свои локальные базы и читать из них. Consistency теряется в этом случае, так как возможно, что запрос на запись попадет в одну группу машин и будет записан там, а запрос на чтение - в другую.
5) Какая именно база фактически используется на каждой локальной машине - не так важно, не обязательно, чтобы она была распределенной, важно только, чтобы обработчикам к ней можно было обращаться по сети. 
---
Несколько общих идей, как можно попробовать ускорить такую схему. 
1) Для некоторых не самых важных запросов (запрос на чтение всех отчетов я считаю важным, запрос на чтение одного конкретного - не таким) можно пробовать читать не со всех баз, а с (N - W + 1) баз. В этом случае может получится неправильный ответ, если конкретный отчет был записан в <W баз, такое возможно, если система была в разделенном состоянии. Однако в большинстве случаев ответ будет правильным.
2) Поскольку отчеты привязаны к программам, можно сделать привязку определенной программы к определенному инстансу базы данных. Тогда запрос на запись будет делаться обязательно в локальную базу, в конкретную базу, которую можно определить из названия программы, и в остальные случайные W-2 баз. В этом случае, если обработчик в будущем получит достаточно популярный запрос "все отчеты для конкретной программы", он может выдать ответ, собранный с определенной базы данных, которая хранит отчеты конкретной программы. Опять же, есть шанс, что нужная машина была какое-то время недоступна, и тогда запрос на чтение будет не 100% правильный, однако в большинстве случаев он будет правильный.
